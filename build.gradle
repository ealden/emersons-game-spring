plugins {
    id 'org.springframework.boot' version '3.+'
    id 'io.spring.dependency-management' version '1.+'
    id 'java'
    id 'war'
}

group = 'com.escanan.ealden.race'
version = '1.0.0-SNAPSHOT'

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.cucumber:cucumber-java:7.+'
    testImplementation 'io.cucumber:cucumber-spring:7.+'
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.+'
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.+'
    cucumberRuntime 'com.h2database:h2'
}

java {
    sourceCompatibility = JavaLanguageVersion.of(21)
}

test {
    useJUnitPlatform()
}

tasks.register('run') {
    dependsOn bootRun
}

tasks.register('cucumber', JavaExec) {
    dependsOn build

    def feature = 'src/test/resources'

    if (project.hasProperty('feature')) {
        feature = project.getProperty('feature')
    }

    mainClass = 'io.cucumber.core.cli.Main'
    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
    args = ['--tags', 'not @wip', '--plugin', 'pretty', '--glue', project.group, feature]
}
